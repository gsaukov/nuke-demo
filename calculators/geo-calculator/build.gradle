plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation project(path: ':calculators:shared')

    //ONLY FOR OSM TO GEOJSON CONVERSION VIA resources/scripts/osmtogeojson.js
    implementation 'org.graalvm.js:js:22.3.1'
    implementation 'org.graalvm.js:js-scriptengine:22.3.1'
    //ONLY FOR OSM TO GEOJSON CONVERSION VIA resources/scripts/osmtogeojson.js

    //LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    //LOMBOK

    implementation 'org.springframework:spring-context'
    implementation 'org.slf4j:slf4j-api'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'de.grundid.opendatalab:geojson-jackson:1.14'
    implementation 'org.locationtech.jts:jts-core:1.19.0'
    implementation 'org.locationtech.jts.io:jts-io-common:1.19.0'
    implementation 'com.mapbox.mapboxsdk:mapbox-sdk-turf:5.8.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

task downloadJsDependencies(dependsOn: 'build') {
    def osmtogeojsonFile = file('src/main/resources/scripts/osmtogeojson.js')
    if (!osmtogeojsonFile.exists()) {
        new URL('https://unpkg.com/osmtogeojson@3.0.0-beta.5/osmtogeojson.js').withInputStream{ i -> osmtogeojsonFile.withOutputStream{ it << i }}
    }
    def turfFile = file('src/main/resources/scripts/turf.js')
    if (!turfFile.exists()) {
        new URL('https://cdnjs.cloudflare.com/ajax/libs/Turf.js/6.5.0/turf.min.js').withInputStream{ i -> turfFile.withOutputStream{ it << i }}
    }
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}